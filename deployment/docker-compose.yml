version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ../backend
      dockerfile: ../deployment/backend/Dockerfile
    container_name: iflytek-interview-backend
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=sqlite:///./data/interview_system.db
      - IFLYTEK_APP_ID=${IFLYTEK_APP_ID}
      - IFLYTEK_API_KEY=${IFLYTEK_API_KEY}
      - IFLYTEK_API_SECRET=${IFLYTEK_API_SECRET}
      - IFLYTEK_SPARK_URL=${IFLYTEK_SPARK_URL}
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
    depends_on:
      - redis
    networks:
      - iflytek_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务
  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/frontend/Dockerfile
    container_name: iflytek-interview-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - iflytek_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: iflytek-interview-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - iflytek_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: iflytek-interview-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - iflytek_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# 数据卷
volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

# 网络
networks:
  iflytek_network:
    driver: bridge
